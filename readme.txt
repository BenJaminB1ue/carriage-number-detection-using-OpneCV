作者：BenJamin Blue
Github:https://github.com/BenJaminB1ue 
CSDN:https://blog.csdn.net/BenJamin_Blue
标题：Project 1. Carriage number recognition
――――――――――――――――――――――――――――――
【使用方法】：

请将解压出来的“1 Carriage number”和“character_template”文件夹放在工程路径内。
――――――――――――――――――――――――――――――
【主要思想/架构】：

输入图像 ――>灰度处理 ――>阈值处理 ――>形态学处理（闭运算、开运算 ――>Canny边缘检测 ――>闭运算开运算） ――>投影直方图切割字符 ――>模板匹配 ――>输出文本序列

本工作运用了形态学处理的方法对字符位置进行粗定位，结合模板匹配得到结果。
1.经过图像预处理和一系列开闭运算和canny边缘检测后，原图中只有局部纹理特征丰富而且连成矩形块状，周围空旷的文字部分能够有效地保存下来。
2.用投影的方法，分割出每个二值字符。
3.度量这些字符与character_template库中模板的欧氏距离，进行匹配。
4.将匹配结果最好的字符输出文本至原图。
――――――――――――――――――――――――――――――
【关于输入图像（局限性分析）】：

该工作目前只能对“1 Carriage number”文件夹内的“carriage3”图像取得较好的识别。

首先，该方法中涉及的参数过多，如阈值化参数、Canny算子的滞后性阈值参数、开闭运算的卷积核参数等。
由于很难在多张不同环境下的图像中找到一套通用的参数，该方法的可迁移性较差；
除此之外，该方法也未能考虑图片视角的问题，仅对正对着的列车图片能够取得较好的识别效果。

为了解决上述问题，我们可以考虑设置自适应阈值自行调整参数，或者采用滑动条的方式，让用户逐步地、交互式地选择最优参数；
在文字序列粗定位阶段，我们也可以用鲁棒性较高的文字特征梯度算子替代形态学的方法；
除此之外，为了解决多视角下的识别问题，该工作还需要引入透视矫正，水平矫正，仿射变换等方法。

迫于时间和个人能力有限，以上想法虽曾尝试但始终未能成功，这还需要后续更多的研究工作。
